generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @unique @default(uuid())
  email            String         @unique
  password         String?        @db.Text
  role             Role           @default(GUEST)
  request_donation Boolean        @default(false)
  name             String
  description      String?
  donor            Donation[]     @relation(name: "donor")
  recipient        Donation[]     @relation(name: "recipient")
  member           Organization[] @relation(name: "member")
}

model Donation {
  id                String        @id @unique @default(uuid())
  donor_id          String
  donor             User          @relation(name: "donor", fields: [donor_id], references: [id])
  recipient_id      String?
  recipient         User?         @relation(name: "recipient", fields: [recipient_id], references: [id])
  name              String        @unique
  description       String
  pickup_coordinate String?
  pickup_status     PickupStatus?
  tracking          Tracking[]    @relation(name: "tracking")
}

model Tracking {
  id          String   @id @unique @default(uuid())
  donation_id String
  donation    Donation @relation(name: "tracking", fields: [donation_id], references: [id])
  description String
  createdAt   DateTime @default(now())
}

model Organization {
  id        String  @id @unique @default(uuid())
  name      String  @unique
  organizer Event[] @relation(name: "event")
  user      User[]  @relation(name: "member")
}

model Event {
  id           String       @id @unique @default(uuid())
  organizer_id String
  organizer    Organization @relation(name: "event", fields: [organizer_id], references: [id])
  name         String       @unique
  description  String
  date         DateTime     @default(now())
  slug         String
}

enum Role {
  ADMIN
  DONOR
  RECIPIENT
  VOLUNTEER
  GUEST
}

enum PickupStatus {
  RECIEVED
  CONFIRMED
  REJECTED
}
