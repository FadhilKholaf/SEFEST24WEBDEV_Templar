generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @unique @default(uuid())
  email     String         @unique
  password  String?
  role      Role           @default(GUEST)
  donor     Donation[]     @relation(name: "donor")
  recipient Donation[]     @relation(name: "recipient")
  sender    Message[]      @relation(name: "sender")
  reciever  Message[]      @relation(name: "reciever")
  member    Organization[] @relation(name: "member")
}

model Donation {
  id                String        @id @unique @default(uuid())
  donor_id          String
  donor             User          @relation(name: "donor", fields: [donor_id], references: [id])
  recipient_id      String?
  recipient         User?         @relation(name: "recipient", fields: [recipient_id], references: [id])
  name              String        @unique
  pickup_coordinate String?
  pickup_status     PickupStatus?
}

model Message {
  id          String @id @unique @default(uuid())
  sender_id   String
  sender      User   @relation(name: "sender", fields: [sender_id], references: [id])
  reciever_id String
  reciever    User   @relation(name: "reciever", fields: [reciever_id], references: [id])
  content     String
}

model Organization {
  id        String  @id @unique @default(uuid())
  name      String  @unique
  organizer Event[] @relation(name: "event")
  user      User[]  @relation(name: "member")
}

model Event {
  id           String       @id @unique @default(uuid())
  organizer_id String
  organizer    Organization @relation(name: "event", fields: [organizer_id], references: [id])
  name         String       @unique
  date         DateTime     @default(now())
}

enum Role {
  ADMIN
  DONOR
  RECIPIENT
  VOLUNTEER
  GUEST
}

enum PickupStatus {
  CONFIRMED
  REJECTED
}
